Enter file contents here# must be unique in a given SonarQube instance
sonar.projectKey=ZONENONEKEY
# this is the name displayed in the SonarQube UI
sonar.projectName=ZONENONEPROJECT
sonar.projectVersion=0.1
 
# Path is relative to the sonar-project.properties file. Replace "\" by "/" on Windows.
# Since SonarQube 4.2, this property is optional if sonar.modules is set. 
# If not set, SonarQube starts looking for source code from the directory containing 
# the sonar-project.properties file.
#sonar.sources=src/main
 
# Encoding of the source code. Default is default system encoding
#sonar.sourceEncoding=UTF-8

#JIRA details
sonar.jira.url=http://onejira.verizon.com/
sonar.jira.url.param=SonarQube
sonar.jira.project.key=CAVV
sonar.jira.login.secured=test
sonar.jira.password.secured=test



sonar.java.coveragePlugin=jacoco
# Comma-separated paths to directories with sources (required)
sonar.sources=src/main

# Comma-separated paths to directories with tests (optional)
sonar.tests=src/test

# Encoding of the source files
sonar.sourceEncoding=UTF-8

# Language
sonar.language=java

#Tells SonarQube to reuse existing reports for unit tests execution and coverage reports - depricated
#sonar.dynamicAnalysis=reuseReports

#Tells SonarQube where the unit tests execution reports are
sonar.junit.reportsPath=target/surefire-reports

#Tells SonarQube that the code coverage tool by unit tests is JaCoCo
sonar.java.coveragePlugin=jacoco

#Tells SonarQube where the unit tests code coverage report is
sonar.jacoco.reportPath=target/coverage-reports/jacoco-ut.exec

#Tells SonarQube where the integration tests code coverage report is
sonar.jacoco.itReportPath=target/coverage-reports/jacoco-it.exec

sonar.binaries=target/classes
